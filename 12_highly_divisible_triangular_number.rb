# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be: 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# What is the value of the first triangle number to have over five hundred divisors? (including 1 and itself)

class Integer < Numeric
  def is_prime?
    return false if self <= 1 or self.even?
    return false unless (self - 1) % 6 == 0 or (self + 1) % 6 == 0
    3.step(Math.sqrt(self).to_i, 2) do |x|
      return false if self % x == 0
    end
    true
  end
end

index = 3
number = 6
nr_of_divisors = 0
while nr_of_divisors <= 501
  nr_of_divisors = 0
  index += 1
  number += index
  if number.is_prime?
    nr_of_divisors = 1
  else
    square = Math.sqrt(number)
    1.upto(square.to_i) do |d|
      nr_of_divisors += 2 if number % d == 0
    end
    nr_of_divisors -= 1 if square.to_i.to_f == square
  end
end
puts number